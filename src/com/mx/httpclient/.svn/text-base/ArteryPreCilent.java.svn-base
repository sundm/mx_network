package com.jwsmart.httpclient;

import java.io.InputStream;
import java.util.HashMap;
import java.util.Map;
/**
 * Created by gaofeng on 15/8/12.
 */
public class ArteryPreCilent {

    private ArteryPreTrans mHttpTransMit;

    private static ArteryPreCilent mJwsHttpClient;

    private ArteryPreCilent(){
        mHttpTransMit = ArteryPreTrans.getInstance();
    }
    
    public static String getVersion() {
		return "1.2.0311";
	}

    public static ArteryPreCilent getInstance(){
        if (mJwsHttpClient == null){
            mJwsHttpClient = new ArteryPreCilent();
        }
         
        return mJwsHttpClient;
    }

    public void connect() {
        //预留函数
    }

    public void disconnect() {
        //预留函数
    }

    /**
     *
     * @return
     */
    public boolean setClientCert(InputStream certStream,int nMode) {
        // 读取证书
        return mHttpTransMit.setHttpsMothed(certStream,nMode);

    }
    
    public Map<String, Object> applyOrder(Map<String, Object> paramesField,Map<String, Object> preField) {
    	return mHttpTransMit.applyOrder(paramesField, preField);
    }
    
    public Map<String, Object> payInit(Map<String, Object> paramesField,Map<String, Object> preField) {
    	return mHttpTransMit.payInit(paramesField, preField);
    }

    public Map<String, Object> queryPayStatus(Map<String, Object> paramesField,Map<String, Object> preField) {
    	return mHttpTransMit.queryPayStatus(paramesField, preField);
    }
    
    public Map<String, Object> merchantDo(Map<String, Object> paramesField,Map<String, Object> preField) {
    	return mHttpTransMit.merChantDo(paramesField, preField);
    }
    
    public Map<String, Object> queryTradeStatus(String tradeId) {
    	Map<String, Object> paramesField = new HashMap<String, Object>();
    	paramesField.put(ArteryPreDef.FIELD_tradeIdList, tradeId);
    	Map<String, Object> preField = new HashMap<String, Object>();
    	preField.put("merId", "200002");
    	preField.put("method", "queryTradeStatus");
    	return mHttpTransMit.assignMethod(paramesField, preField);
    }
}
